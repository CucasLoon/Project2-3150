A51 MACRO ASSEMBLER  PROJECT                                                              11/27/2018 16:03:27 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\project.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE project.a51 SET(SMALL) DEBUG PRINT(.\Listings\project.lst) OBJECT(.\Obj
                      ects\project.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;#include <reg932.inc>
                       2     ;CS 1350 Project 2
                       3     ;Lucas Coon, Andrew Van Horn, Corey Kitch
                       4     ;11/29/18
                       5     ;Implements add-an shift, booth's algorithm, and exteded booths algorithm multiplication 
                       6     ;
                       7     ;Bank Assignments
                       8     ;B0 = Add and Shift
                       9     ;B1 = Booth's Algorithm
                      10     ;B2 = Extedned Booth's Algorithm
                      11     ;B3 = Scratchpad Memory
                      12     ;
                      13     ;Register Assignments
                      14     ;R0 = MulitplicandHB => Execution time HB
                      15     ;R1 = MultiplicandLB => Execution TIme LB
                      16     ;R2 = ResultHHB
                      17     ;R3 = ResultHLB
                      18     ;R4 = ResultLHB
                      19     ;R5 = ResultLLB
                      20     ;R6 = Number of Additions
                      21     ;R7 = Unused
                      22     ;
                      23     ;Other Assgnments
                      24     ;18 = Loop counter
                      25     ;Input Operands Here
  0006                26     MULTIPLICANDHB EQU 06H ;Multiplicand HB value
  00E5                27     MULTIPLICANDLB EQU 0E5H ;Multiplicand LB value
  0005                28     MULTIPLIERHB   EQU 05H ;Multiplier HB Value
  0055                29     MULTIPLIERLB   EQU 55H ;Multiplier LB Value 
                      30     ;Main Code Bock
0000                  31                     ORG 0000H
0000 758120           32                     MOV     81H, #20H       ;Set Stack Pointer to 20H
0003 120050           33                     LCALL   AANDS
0006 12006E           34                     LCALL   B1ALG
0009 80FE             35     LOOP:   SJMP    LOOP    ;Loop Forever
                      36     
                      37     ;Loads Operand values into bank
000B 7806             38     LOAD:   MOV R0, #MULTIPLICANDHB
000D 79E5             39                     MOV R1, #MULTIPLICANDLB
000F 7A00             40                     MOV     R2, #00H
0011 7B00             41                     MOV R3, #00H
0013 7C05             42                     MOV     R4, #MULTIPLIERHB
0015 7D55             43                     MOV R5, #MULTIPLIERLB
0017 7E00             44                     MOV     R6, #00H
0019 22               45                     RET
                      46                     
                      47     ;Shifts Result          
001A EA               48     SHIFT:  MOV     A, R2
001B A2E7             49                     MOV C, ACC.7    
001D 13               50                     RRC     A               ;Rotate ResultHHB Right
001E FA               51                     MOV     R2, A
001F EB               52                     MOV     A, R3
0020 13               53                     RRC     A               ;Rotate ResultHLB Right
0021 FB               54                     MOV     R3, A
0022 EC               55                     MOV     A, R4
0023 13               56                     RRC     A               ;Rotate ResultLHB Right
0024 FC               57                     MOV     R4, A
A51 MACRO ASSEMBLER  PROJECT                                                              11/27/2018 16:03:27 PAGE     2

0025 ED               58                     MOV     A, R5
0026 13               59                     RRC     A               ;Rotate ResultLLB Right
0027 FD               60                     MOV     R5, A
0028 22               61                     RET
                      62     
                      63             
                      64     ;Adds Multiplicand and HB Result
0029 C3               65     ADD1:   CLR             C
002A EB               66                     MOV             A, R3
002B 39               67                     ADDC    A, R1           ;Add Multiplicand LB to R3
002C FB               68                     MOV     R3, A
002D EA               69                     MOV     A, R2
002E 38               70                     ADDC    A, R0           ;Add Multiplicand HB w/ C to R2
002F FA               71                     MOV             R2, A
0030 0E               72                     INC             R6                      ;Increment ADD/SUB Counter
0031 22               73                     RET
                      74     
0032 C3               75     SUB1:   CLR             C
0033 EB               76                     MOV             A, R3
0034 99               77                     SUBB    A, R1           ;Sub Multiplicand LB from R3
0035 FB               78                     MOV     R3, A
0036 EA               79                     MOV     A, R2
0037 98               80                     SUBB    A, R0           ;Sub Multiplicand HB from R2
0038 FA               81                     MOV             R2, A
0039 0E               82                     INC             R6                      ;Increment ADD/SUB Counter
003A 22               83                     RET
                      84     
                      85     ;Initializes Timer 0
003B C28C             86     STRTMR: CLR     8CH                             ;Stop Timer
003D 758A00           87                     MOV     8AH, #00H
0040 758C00           88                     MOV     8CH, #00H               ;Set timer to 0
0043 758940           89                     MOV     89H, #01000000B ;Set timer to Mode 1
0046 D28C             90                     SETB 8CH                        ;Start Timer
0048 22               91                     RET
                      92                     
                      93     ;Stops Timer 0 and loads result to R0, R1
0049 C28C             94     ENDTMR: CLR             8CH                     ;Stop Timer
004B A88C             95                     MOV             R0, 8CH
004D A98A             96                     MOV             R1, 8AH         ;Move timer value to R0, R1
004F 22               97                     RET
                      98     
                      99     ;Add and Shift function;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0050 75D000          100     AANDS:  MOV             0D0H, #00000000B        ;Set Bank 0
0053 12003B          101                     LCALL   STRTMR          ;Start Timer
0056 751810          102                     MOV     18H, #10H       ;Initializ loop counter
0059 12000B          103                     LCALL   LOAD            ;Load operands into bank
005C ED              104     ALOOP:  MOV             A, R5           ;Move LLB to ACC
005D 30E004          105                     JNB             ACC.0, ASKIP    ;if ACC = 0, skip add
0060 120029          106                     LCALL   ADD1            ;Add Muliplicand to Result HB   
0063 0E              107                     INC             R6                      ;Increment Add/Sub COunter
0064 12001A          108     ASKIP:  LCALL   SHIFT           ;Shift Right
0067 D518F2          109                     DJNZ    18H, ALOOP      ;Repeat Loop 16 times
006A 120049          110                     LCALL   ENDTMR          ;Stop Timer
006D 22              111                     RET
                     112     
                     113     ;Booth's Algorithm Funciton;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
006E 75D008          114     B1ALG:  MOV             0D0H, #00001000B        ;Set Bank 1
0071 12003B          115                     LCALL   STRTMR          ;Start Timer
0074 751810          116                     MOV     18H, #10H       ;Initializ loop counter
0077 12000B          117                     LCALL   LOAD            ;Load operands into bank
007A ED              118     B1LOOP: MOV             A, R5           ;Move LLB to ACC
007B 30D708          119                     JNB             PSW.7, B1C0             ;If C=0, Jump to B1C0
007E 20E00D          120                     JB              ACC.0, B1SKIP;If C=1, A.0=1, Skip ADD
0081 120029          121     B1ADD:  LCALL   ADD1            ;If C=1, A.0=0, ADD
0084 8008            122                     SJMP    B1SKIP
0086 30E005          123     B1C0:   JNB             ACC.0, B1SKIP;If C=0, A.0=0, skip SUB
A51 MACRO ASSEMBLER  PROJECT                                                              11/27/2018 16:03:27 PAGE     3

0089 120032          124     B1SUB:  LCALL   SUB1            ;If C=0, A.0=1, Sub
008C 8000            125                     SJMP    B1SKIP
008E 12001A          126     B1SKIP: LCALL   SHIFT           ;Shift Right
0091 D518E6          127                     DJNZ    18H, B1LOOP     ;Repeat Loop 16 times
0094 120049          128                     LCALL   ENDTMR          ;Stop Timer
0097 22              129                     RET
                     130                     
                     131     ;Extended Booth's Function;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                     132     
                     133     
                     134     END
A51 MACRO ASSEMBLER  PROJECT                                                              11/27/2018 16:03:27 PAGE     4

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AANDS. . . . . . .  C ADDR   0050H   A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADD1 . . . . . . .  C ADDR   0029H   A   
ALOOP. . . . . . .  C ADDR   005CH   A   
ASKIP. . . . . . .  C ADDR   0064H   A   
B1ADD. . . . . . .  C ADDR   0081H   A   
B1ALG. . . . . . .  C ADDR   006EH   A   
B1C0 . . . . . . .  C ADDR   0086H   A   
B1LOOP . . . . . .  C ADDR   007AH   A   
B1SKIP . . . . . .  C ADDR   008EH   A   
B1SUB. . . . . . .  C ADDR   0089H   A   
ENDTMR . . . . . .  C ADDR   0049H   A   
LOAD . . . . . . .  C ADDR   000BH   A   
LOOP . . . . . . .  C ADDR   0009H   A   
MULTIPLICANDHB . .  N NUMB   0006H   A   
MULTIPLICANDLB . .  N NUMB   00E5H   A   
MULTIPLIERHB . . .  N NUMB   0005H   A   
MULTIPLIERLB . . .  N NUMB   0055H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
SHIFT. . . . . . .  C ADDR   001AH   A   
STRTMR . . . . . .  C ADDR   003BH   A   
SUB1 . . . . . . .  C ADDR   0032H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
