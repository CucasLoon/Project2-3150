A51 MACRO ASSEMBLER  PROJECT                                                              11/27/2018 16:59:09 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\project.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE project.a51 SET(SMALL) DEBUG PRINT(.\Listings\project.lst) OBJECT(.\Obj
                      ects\project.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;#include <reg932.inc>
                       2     ;CS 1350 Project 2
                       3     ;Lucas Coon, Andrew Van Horn, Corey Kitch
                       4     ;11/29/18
                       5     ;Implements add-an shift, booth's algorithm, and exteded booths algorithm multiplication 
                       6     ;
                       7     ;Bank Assignments
                       8     ;B0 = Add and Shift
                       9     ;B1 = Booth's Algorithm
                      10     ;B2 = Extedned Booth's Algorithm
                      11     ;B3 = Scratchpad Memory
                      12     ;
                      13     ;Register Assignments
                      14     ;R0 = MulitplicandHB => Execution time HB
                      15     ;R1 = MultiplicandLB => Execution TIme LB
                      16     ;R2 = ResultHHB
                      17     ;R3 = ResultHLB
                      18     ;R4 = ResultLHB
                      19     ;R5 = ResultLLB
                      20     ;R6 = Number of Additions
                      21     ;R7 = Unused
                      22     ;
                      23     ;Other Assgnments
                      24     ;18 = Loop counter
                      25     ;Input Operands Here
  0000                26     MULTIPLICANDHB EQU 00H ;Multiplicand HB value
  0025                27     MULTIPLICANDLB EQU 25H ;Multiplicand LB value
  0000                28     MULTIPLIERHB   EQU 00H ;Multiplier HB Value
  0078                29     MULTIPLIERLB   EQU 78H ;Multiplier LB Value 
                      30     ;Main Code Bock
0000                  31                     ORG 0000H
0000 758120           32                     MOV     81H, #20H       ;Set Stack Pointer to 20H
0003 120053           33                     LCALL   AANDS
0006 120071           34                     LCALL   B1ALG
0009 12009B           35                     LCALL   B2ALG
000C 80FE             36     LOOP:   SJMP    LOOP    ;Loop Forever
                      37     
                      38     ;Loads Operand values into bank
000E 7800             39     LOAD:   MOV R0, #MULTIPLICANDHB
0010 7925             40                     MOV R1, #MULTIPLICANDLB
0012 7A00             41                     MOV     R2, #00H
0014 7B00             42                     MOV R3, #00H
0016 7C00             43                     MOV     R4, #MULTIPLIERHB
0018 7D78             44                     MOV R5, #MULTIPLIERLB
001A 7E00             45                     MOV     R6, #00H
001C 22               46                     RET
                      47                     
                      48     ;Shifts Result          
001D EA               49     SHIFT:  MOV     A, R2
001E A2E7             50                     MOV C, ACC.7    
0020 13               51                     RRC     A               ;Rotate ResultHHB Right
0021 FA               52                     MOV     R2, A
0022 EB               53                     MOV     A, R3
0023 13               54                     RRC     A               ;Rotate ResultHLB Right
0024 FB               55                     MOV     R3, A
0025 EC               56                     MOV     A, R4
0026 13               57                     RRC     A               ;Rotate ResultLHB Right
A51 MACRO ASSEMBLER  PROJECT                                                              11/27/2018 16:59:09 PAGE     2

0027 FC               58                     MOV     R4, A
0028 ED               59                     MOV     A, R5
0029 13               60                     RRC     A               ;Rotate ResultLLB Right
002A FD               61                     MOV     R5, A
002B 22               62                     RET
                      63     
                      64             
                      65     ;Adds Multiplicand and HB Result
002C C3               66     ADD1:   CLR             C
002D EB               67                     MOV             A, R3
002E 39               68                     ADDC    A, R1           ;Add Multiplicand LB to R3
002F FB               69                     MOV     R3, A
0030 EA               70                     MOV     A, R2
0031 38               71                     ADDC    A, R0           ;Add Multiplicand HB w/ C to R2
0032 FA               72                     MOV             R2, A
0033 0E               73                     INC             R6                      ;Increment ADD/SUB Counter
0034 22               74                     RET
                      75     
0035 C3               76     SUB1:   CLR             C
0036 EB               77                     MOV             A, R3
0037 99               78                     SUBB    A, R1           ;Sub Multiplicand LB from R3
0038 FB               79                     MOV     R3, A
0039 EA               80                     MOV     A, R2
003A 98               81                     SUBB    A, R0           ;Sub Multiplicand HB from R2
003B FA               82                     MOV             R2, A
003C 0E               83                     INC             R6                      ;Increment ADD/SUB Counter
003D 22               84                     RET
                      85     
                      86     ;Initializes Timer 0
003E C28C             87     STRTMR: CLR     8CH                             ;Stop Timer
0040 758A00           88                     MOV     8AH, #00H
0043 758C00           89                     MOV     8CH, #00H               ;Set timer to 0
0046 758940           90                     MOV     89H, #01000000B ;Set timer to Mode 1
0049 D28C             91                     SETB 8CH                        ;Start Timer
004B 22               92                     RET
                      93                     
                      94     ;Stops Timer 0 and loads result to R0, R1
004C C28C             95     ENDTMR: CLR             8CH                     ;Stop Timer
004E A88C             96                     MOV             R0, 8CH
0050 A98A             97                     MOV             R1, 8AH         ;Move timer value to R0, R1
0052 22               98                     RET
                      99     
                     100     ;Add and Shift function;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0053 75D000          101     AANDS:  MOV             0D0H, #00000000B        ;Set Bank 0
0056 12003E          102                     LCALL   STRTMR          ;Start Timer
0059 751810          103                     MOV     18H, #10H       ;Initializ loop counter
005C 12000E          104                     LCALL   LOAD            ;Load operands into bank
005F ED              105     ALOOP:  MOV             A, R5           ;Move LLB to ACC
0060 30E004          106                     JNB             ACC.0, ASKIP    ;if ACC = 0, skip add
0063 12002C          107                     LCALL   ADD1            ;Add Muliplicand to Result HB   
0066 0E              108                     INC             R6                      ;Increment Add/Sub COunter
0067 12001D          109     ASKIP:  LCALL   SHIFT           ;Shift Right
006A D518F2          110                     DJNZ    18H, ALOOP      ;Repeat Loop 16 times
006D 12004C          111                     LCALL   ENDTMR          ;Stop Timer
0070 22              112                     RET
                     113     
                     114     ;Booth's Algorithm Funciton;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0071 75D008          115     B1ALG:  MOV             0D0H, #00001000B        ;Set Bank 1
0074 12003E          116                     LCALL   STRTMR          ;Start Timer
0077 751810          117                     MOV     18H, #10H       ;Initializ loop counter
007A 12000E          118                     LCALL   LOAD            ;Load operands into bank
007D ED              119     B1LOOP: MOV             A, R5           ;Move LLB to ACC
007E 30D708          120                     JNB             PSW.7, B1C0             ;If C=0, Jump to B1C0
0081 20E00D          121                     JB              ACC.0, B1SKIP;If C=1, A.0=1, Skip ADD
0084 12002C          122     B1ADD:  LCALL   ADD1            ;If C=1, A.0=0, ADD
0087 8008            123                     SJMP    B1SKIP
A51 MACRO ASSEMBLER  PROJECT                                                              11/27/2018 16:59:09 PAGE     3

0089 30E005          124     B1C0:   JNB             ACC.0, B1SKIP;If C=0, A.0=0, skip SUB
008C 120035          125     B1SUB:  LCALL   SUB1            ;If C=0, A.0=1, Sub
008F 8000            126                     SJMP    B1SKIP
0091 12001D          127     B1SKIP: LCALL   SHIFT           ;Shift Right
0094 D518E6          128                     DJNZ    18H, B1LOOP     ;Repeat Loop 16 times
0097 12004C          129                     LCALL   ENDTMR          ;Stop Timer
009A 22              130                     RET
                     131                     
                     132     ;Extended Booth's Function;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
009B 75D010          133     B2ALG:  MOV             0D0H, #00010000B        ;Set Bank 2
009E 12003E          134                     LCALL   STRTMR          ;Start Timer
00A1 751808          135                     MOV     18H, #08H       ;Initializ loop counter
00A4 12000E          136                     LCALL   LOAD            ;Load operands into bank
00A7 C3              137                     CLR             C
00A8 ED              138     B2LOOP: MOV             A, R5           ;Move LLB to ACC
00A9 33              139                     RLC             A                       ;Move Carry into ACC
00AA 5407            140                     ANL             A, #00000111B;Bit Mask low 3 bits
00AC B40002          141                     CJNE    A, #00000000B, NEXT1 ;If 000 shift
00AF 803B            142                     SJMP    B2SHIFT
00B1 B40105          143     NEXT1:  CJNE    A, #00000001B, NEXT2;if 001 add and shift
00B4 12002C          144                     LCALL   ADD1
00B7 8033            145                     SJMP    B2SHIFT
00B9 B40205          146     NEXT2:  CJNE    A, #00000010B, NEXT3;if 010 add and shift
00BC 12002C          147                     LCALL   ADD1
00BF 802B            148                     SJMP    B2SHIFT
00C1 B40308          149     NEXT3:  CJNE    A, #00000011B, NEXT4;if 011 addx2 and shift
00C4 12002C          150                     LCALL   ADD1
00C7 12002C          151                     LCALL   ADD1
00CA 8020            152                     SJMP    B2SHIFT
00CC B40408          153     NEXT4:  CJNE    A, #00000100B, NEXT5;if 100 subx2 and shift
00CF 120035          154                     LCALL   SUB1
00D2 120035          155                     LCALL   SUB1
00D5 8015            156                     SJMP    B2SHIFT
00D7 B40505          157     NEXT5:  CJNE    A, #00000101B, NEXT6;if 101 subx2 and shift
00DA 120035          158                     LCALL   SUB1
00DD 800D            159                     SJMP    B2SHIFT
00DF B40605          160     NEXT6:  CJNE    A, #00000110B, NEXT7;if 110 subx2 and shift
00E2 120035          161                     LCALL   SUB1
00E5 8005            162                     SJMP    B2SHIFT
00E7 B40702          163     NEXT7:  CJNE    A, #00000111B, B2SHIFT;if 111  shift
00EA 8000            164                     SJMP    B2SHIFT
00EC 12001D          165     B2SHIFT:LCALL   SHIFT           ;Shift Rightx2
00EF 12001D          166                     LCALL   SHIFT
00F2 D518B3          167                     DJNZ    18H, B2LOOP     ;Repeat Loop 16 times
00F5 12004C          168                     LCALL   ENDTMR          ;Stop Timer
00F8 22              169                     RET
                     170     
                     171     END
A51 MACRO ASSEMBLER  PROJECT                                                              11/27/2018 16:59:09 PAGE     4

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AANDS. . . . . . .  C ADDR   0053H   A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADD1 . . . . . . .  C ADDR   002CH   A   
ALOOP. . . . . . .  C ADDR   005FH   A   
ASKIP. . . . . . .  C ADDR   0067H   A   
B1ADD. . . . . . .  C ADDR   0084H   A   
B1ALG. . . . . . .  C ADDR   0071H   A   
B1C0 . . . . . . .  C ADDR   0089H   A   
B1LOOP . . . . . .  C ADDR   007DH   A   
B1SKIP . . . . . .  C ADDR   0091H   A   
B1SUB. . . . . . .  C ADDR   008CH   A   
B2ALG. . . . . . .  C ADDR   009BH   A   
B2LOOP . . . . . .  C ADDR   00A8H   A   
B2SHIFT. . . . . .  C ADDR   00ECH   A   
ENDTMR . . . . . .  C ADDR   004CH   A   
LOAD . . . . . . .  C ADDR   000EH   A   
LOOP . . . . . . .  C ADDR   000CH   A   
MULTIPLICANDHB . .  N NUMB   0000H   A   
MULTIPLICANDLB . .  N NUMB   0025H   A   
MULTIPLIERHB . . .  N NUMB   0000H   A   
MULTIPLIERLB . . .  N NUMB   0078H   A   
NEXT1. . . . . . .  C ADDR   00B1H   A   
NEXT2. . . . . . .  C ADDR   00B9H   A   
NEXT3. . . . . . .  C ADDR   00C1H   A   
NEXT4. . . . . . .  C ADDR   00CCH   A   
NEXT5. . . . . . .  C ADDR   00D7H   A   
NEXT6. . . . . . .  C ADDR   00DFH   A   
NEXT7. . . . . . .  C ADDR   00E7H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
SHIFT. . . . . . .  C ADDR   001DH   A   
STRTMR . . . . . .  C ADDR   003EH   A   
SUB1 . . . . . . .  C ADDR   0035H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
